from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
from dotenv import load_dotenv
import smtplib
import os

load_dotenv()

class SendEmailVerification:
    def __init__(self) -> None:
        self.sender_email:str = os.getenv('sender_email')
        self.sender_password:str = os.getenv('sender_password')
        
    def send_verification_email(self, recipient_email: str, verification_code_or_link: str, type_email: str) -> None:
        match type_email:
            case 'create_account':
                subject = "üéâ Seu C√≥digo de Verifica√ß√£o Lectify"
                text = f"""Ol√°,

Seja bem-vindo(a) √† Lectify!
Para concluir a cria√ß√£o da sua conta e come√ßar a aproveitar todos os recursos, insira o c√≥digo de verifica√ß√£o abaixo no campo indicado:

    {verification_code_or_link}

Este c√≥digo √© v√°lido por 10 minutos.

Se voc√™ n√£o realizou nenhuma tentativa de cadastro, basta ignorar este e-mail.

Atenciosamente,  
Equipe Lectify
"""
                
            case 'reset_password':
                subject = "üîí Redefini√ß√£o de Senha Lectify"
                text = f"""Ol√°,
Recebemos uma solicita√ß√£o para redefinir a senha da sua conta Lectify Para prosseguir com a redefini√ß√£o, clique no link abaixo:
    
    {verification_code_or_link}

Este c√≥digo √© v√°lido por 10 minutos.

Se voc√™ n√£o solicitou a redefini√ß√£o de senha, por favor, ignore este e-mail. Sua senha permanecer√° inalterada.

Atenciosamente,  
Equipe Lectify
"""
                
            case 'delete_account':
                subject = "‚ö†Ô∏è Confirma√ß√£o de Exclus√£o de Conta Lectify"
                text = f"""Ol√°,
Recebemos uma solicita√ß√£o para excluir sua conta Lectify. Para confirmar a exclus√£o, insira o c√≥digo de verifica√ß√£o abaixo no campo indicado:

    {verification_code_or_link}

Este c√≥digo √© v√°lido por 10 minutos.

Se voc√™ n√£o solicitou a exclus√£o da conta, por favor, ignore este e-mail. Sua conta permanecer√° ativa.

Atenciosamente,
Equipe Lectify
"""
                
        message = MIMEMultipart("alternative")
        message["Subject"] = subject
        message["From"] = self.sender_email
        message["To"] = recipient_email

        part = MIMEText(text, "plain")
        message.attach(part)

        with smtplib.SMTP_SSL("smtp.gmail.com", 465) as server:
            server.login(self.sender_email, self.sender_password)
            server.sendmail(self.sender_email, recipient_email, message.as_string())